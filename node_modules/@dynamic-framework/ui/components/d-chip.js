import { proxyCustomElement, HTMLElement, createEvent, h } from '@stencil/core/internal/client';
import { d as defineCustomElement$2 } from './d-icon2.js';

const DChip$1 = /*@__PURE__*/ proxyCustomElement(class DChip extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.eventClose = createEvent(this, "eventClose", 7);
    this.closeHandler = () => {
      this.eventClose.emit();
    };
    this.theme = 'primary';
    this.text = undefined;
    this.icon = undefined;
    this.iconFamilyClass = undefined;
    this.iconFamilyPrefix = undefined;
    this.showClose = false;
  }
  // eslint-disable-next-line @stencil/own-methods-must-be-private
  generateClasses() {
    return {
      'd-chip': true,
      [`d-chip-${this.theme}`]: !!this.theme,
    };
  }
  render() {
    return (h("span", { class: this.generateClasses() }, this.icon && (h("div", { class: "d-chip-icon-container" }, h("d-icon", { icon: this.icon, familyClass: this.iconFamilyClass, familyPrefix: this.iconFamilyPrefix }))), h("span", null, this.text), this.showClose && (h("button", { type: "button", class: "d-chip-icon-container", onClick: this.closeHandler }, h("d-icon", { icon: "x-lg" })))));
  }
}, [0, "d-chip", {
    "theme": [1],
    "text": [1],
    "icon": [1],
    "iconFamilyClass": [1, "icon-family-class"],
    "iconFamilyPrefix": [1, "icon-family-prefix"],
    "showClose": [4, "show-close"]
  }]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["d-chip", "d-icon"];
  components.forEach(tagName => { switch (tagName) {
    case "d-chip":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, DChip$1);
      }
      break;
    case "d-icon":
      if (!customElements.get(tagName)) {
        defineCustomElement$2();
      }
      break;
  } });
}

const DChip = DChip$1;
const defineCustomElement = defineCustomElement$1;

export { DChip, defineCustomElement };

//# sourceMappingURL=d-chip.js.map