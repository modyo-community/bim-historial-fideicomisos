import { proxyCustomElement, HTMLElement, h } from '@stencil/core/internal/client';

const DBadge$1 = /*@__PURE__*/ proxyCustomElement(class DBadge extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.theme = 'primary';
    this.text = undefined;
    this.isDot = false;
  }
  // eslint-disable-next-line @stencil/own-methods-must-be-private
  generateClasses() {
    return {
      badge: true,
      'badge-dot': this.isDot,
      [`badge-${this.theme}`]: !!this.theme,
    };
  }
  render() {
    return (h("span", { class: this.generateClasses() }, h("span", null, this.text)));
  }
}, [0, "d-badge", {
    "theme": [1],
    "text": [1],
    "isDot": [4, "is-dot"]
  }]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["d-badge"];
  components.forEach(tagName => { switch (tagName) {
    case "d-badge":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, DBadge$1);
      }
      break;
  } });
}

const DBadge = DBadge$1;
const defineCustomElement = defineCustomElement$1;

export { DBadge, defineCustomElement };

//# sourceMappingURL=d-badge.js.map