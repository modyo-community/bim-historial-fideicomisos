{"ast":null,"code":"import { r as registerInstance, c as createEvent, h } from './index-a19c3827.js';\nimport './store-fc6c92fd.js';\nimport { P as PREFIX_BS } from './component-config-025f7932.js';\nconst DInputSelect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.eventChange = createEvent(this, \"eventChange\", 7);\n    this.eventBlur = createEvent(this, \"eventBlur\", 7);\n    this.eventIconStartClick = createEvent(this, \"eventIconStartClick\", 7);\n    this.eventIconEndClick = createEvent(this, \"eventIconEndClick\", 7);\n    this.changeHandler = event => {\n      const {\n        value\n      } = event.target;\n      this.eventChange.emit(this.options.find(option => this.valueExtractor(option).toString() === value));\n    };\n    this.blurHandler = event => {\n      this.eventBlur.emit(event);\n    };\n    this.iconStartClickHandler = event => {\n      this.eventIconStartClick.emit(event);\n    };\n    this.iconEndClickHandler = event => {\n      this.eventIconEndClick.emit(event);\n    };\n    this.innerId = undefined;\n    this.name = undefined;\n    this.label = '';\n    this.options = [];\n    this.labelIcon = undefined;\n    this.labelIconFamilyClass = undefined;\n    this.labelIconFamilyPrefix = undefined;\n    this.isDisabled = false;\n    this.isLoading = false;\n    this.iconFamilyClass = undefined;\n    this.iconFamilyPrefix = undefined;\n    this.iconStart = undefined;\n    this.iconStartFamilyClass = undefined;\n    this.iconStartFamilyPrefix = undefined;\n    this.iconEnd = undefined;\n    this.iconEndFamilyClass = undefined;\n    this.iconEndFamilyPrefix = undefined;\n    this.hint = undefined;\n    this.selectedOption = undefined;\n    this.valueExtractor = item => item === null || item === void 0 ? void 0 : item.value;\n    this.labelExtractor = item => item === null || item === void 0 ? void 0 : item.label;\n  }\n  render() {\n    return h(\"div\", {\n      class: \"d-input\"\n    }, this.label && h(\"label\", {\n      htmlFor: this.innerId\n    }, this.label, this.labelIcon && h(\"d-icon\", {\n      class: \"mdinput-icon\",\n      icon: this.labelIcon,\n      size: `var(--${PREFIX_BS}input-label-font-size)`,\n      familyClass: this.labelIconFamilyClass,\n      familyPrefix: this.labelIconFamilyPrefix\n    })), h(\"div\", {\n      class: \"d-input-control\"\n    }, h(\"div\", {\n      class: {\n        'input-group': true,\n        disabled: this.isDisabled || this.isLoading\n      }\n    }, this.iconStart && h(\"button\", {\n      type: \"button\",\n      class: \"input-group-text\",\n      id: `${this.innerId}Start`,\n      onClick: this.iconStartClickHandler,\n      disabled: this.isDisabled || this.isLoading\n    }, this.iconStart && h(\"d-icon\", {\n      class: \"d-input-icon\",\n      icon: this.iconStart,\n      familyClass: this.iconStartFamilyClass,\n      familyPrefix: this.iconStartFamilyPrefix\n    })), h(\"select\", {\n      id: this.innerId,\n      name: this.name,\n      class: {\n        'form-select': true\n      },\n      \"aria-label\": this.label,\n      disabled: this.isDisabled || this.isLoading,\n      \"aria-describedby\": `${this.innerId}Add ${this.innerId}Hint`,\n      onChange: this.changeHandler,\n      onBlur: this.blurHandler\n    }, this.options.map(option => h(\"option\", {\n      value: this.valueExtractor(option),\n      selected: this.selectedOption && this.valueExtractor(option) === this.valueExtractor(this.selectedOption)\n    }, this.labelExtractor(option)))), this.iconEnd && !this.isLoading && h(\"button\", {\n      type: \"button\",\n      class: \"input-group-text\",\n      id: `${this.innerId}End`,\n      onClick: this.iconEndClickHandler,\n      disabled: this.isDisabled || this.isLoading\n    }, this.iconEnd && h(\"d-icon\", {\n      class: \"d-input-icon\",\n      icon: this.iconEnd,\n      familyClass: this.iconEndFamilyClass,\n      familyPrefix: this.iconEndFamilyPrefix\n    })), this.isLoading && h(\"div\", {\n      class: \"input-group-text form-control-icon loading\"\n    }, h(\"span\", {\n      class: \"spinner-border spinner-border-sm\",\n      role: \"status\",\n      \"aria-hidden\": \"true\"\n    }, h(\"span\", {\n      class: \"visually-hidden\"\n    }, \"Loading...\")))), this.hint && h(\"div\", {\n      class: \"form-text\",\n      id: `${this.innerId}Hint`\n    }, this.hint)));\n  }\n};\nexport { DInputSelect as d_input_select };","map":{"version":3,"names":["DInputSelect","changeHandler","event","value","target","eventChange","emit","options","find","option","valueExtractor","toString","blurHandler","eventBlur","iconStartClickHandler","eventIconStartClick","iconEndClickHandler","eventIconEndClick","item","label","render","h","class","htmlFor","innerId","labelIcon","icon","size","PREFIX_BS","familyClass","labelIconFamilyClass","familyPrefix","labelIconFamilyPrefix","disabled","isDisabled","isLoading","iconStart","type","id","onClick","iconStartFamilyClass","iconStartFamilyPrefix","name","onChange","onBlur","map","selected","selectedOption","labelExtractor","iconEnd","iconEndFamilyClass","iconEndFamilyPrefix","role","hint"],"sources":["/Users/felipemeyer/sites/bim/bim-historial-fideicomisos/node_modules/@dynamic-framework/ui/dist/esm/src/components/d-input-select/d-input-select.tsx"],"sourcesContent":["import type { ComponentInterface, EventEmitter } from '@stencil/core';\nimport {\n  Component,\n  h,\n  Prop,\n  Event,\n} from '@stencil/core';\n\nimport { PREFIX_BS } from '../../utils';\n\n@Component({ tag: 'd-input-select' })\nexport class DInputSelect implements ComponentInterface {\n  /**\n   * The id of the input\n   */\n  @Prop() innerId!: string;\n\n  /**\n   * The name of the input\n   */\n  @Prop() name?: string;\n\n  /**\n   * The label text\n   */\n  @Prop() label = '';\n\n  /**\n   * The select options\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  @Prop() options: Array<Record<string, unknown>> = [];\n\n  /**\n   * Icon for the label text\n   */\n  @Prop() labelIcon?: string;\n\n  /**\n   * Icon label family class\n   */\n  @Prop() labelIconFamilyClass?: string;\n\n  /**\n   * Icon label family prefix\n   */\n  @Prop() labelIconFamilyPrefix?: string;\n\n  /**\n   * Flag to disable the input\n   */\n  @Prop() isDisabled = false;\n\n  /**\n   * Flag for loading state.\n   */\n  @Prop() isLoading = false;\n\n  /**\n   * Right icon family class\n   */\n  @Prop() iconFamilyClass?: string;\n\n  /**\n   * Right icon family class\n   */\n  @Prop() iconFamilyPrefix?: string;\n\n  /**\n   * The start icon for the select\n   */\n  @Prop() iconStart?: string;\n\n  /**\n   * Left icon family class\n   */\n  @Prop() iconStartFamilyClass?: string;\n\n  /**\n   * Left icon family class\n   */\n  @Prop() iconStartFamilyPrefix?: string;\n\n  /**\n   * The end icon for the select\n   */\n  @Prop() iconEnd?: string;\n\n  /**\n   * Right icon family class\n   */\n  @Prop() iconEndFamilyClass?: string;\n\n  /**\n   * Right icon family class\n   */\n  @Prop() iconEndFamilyPrefix?: string;\n\n  /**\n   * Hint to display\n   */\n  @Prop() hint?: string;\n\n  /**\n   * The value selected of the component\n   */\n  @Prop() selectedOption?: Record<string, unknown>;\n\n  /**\n   * Callback to extract the value from the option\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,class-methods-use-this\n  @Prop() valueExtractor: (item: any) => string | number = (item) => item?.value;\n\n  /**\n   * Callback to extract the label from the option\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,class-methods-use-this\n  @Prop() labelExtractor: (item: any) => string = (item) => item?.label;\n\n  /**\n   * Emitted when the select value has changed\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  @Event() eventChange!: EventEmitter;\n\n  /**\n   * Emitted when blur the input\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  @Event() eventBlur!: EventEmitter;\n\n  /**\n   * Emitted when click on the left icon\n   */\n  @Event() eventIconStartClick!: EventEmitter<MouseEvent>;\n\n  /**\n   * Emitted when click on the right icon\n   */\n  @Event() eventIconEndClick!: EventEmitter<MouseEvent>;\n\n  private changeHandler = (event: Event) => {\n    const { value } = event.target as HTMLSelectElement;\n    this.eventChange.emit(\n      this.options.find((option) => this.valueExtractor(option).toString() === value),\n    );\n  };\n\n  private blurHandler = (event: Event) => {\n    this.eventBlur.emit(event);\n  };\n\n  private iconStartClickHandler = (event: MouseEvent) => {\n    this.eventIconStartClick.emit(event);\n  };\n\n  private iconEndClickHandler = (event: MouseEvent) => {\n    this.eventIconEndClick.emit(event);\n  };\n\n  render() {\n    return (\n      <div class=\"d-input\">\n        {(this.label) && (\n          <label htmlFor={this.innerId}>\n            {this.label}\n            {this.labelIcon && (\n              <d-icon\n                class=\"mdinput-icon\"\n                icon={this.labelIcon}\n                size={`var(--${PREFIX_BS}input-label-font-size)`}\n                familyClass={this.labelIconFamilyClass}\n                familyPrefix={this.labelIconFamilyPrefix}\n              />\n            )}\n          </label>\n        )}\n        <div class=\"d-input-control\">\n          <div\n            class={{\n              'input-group': true,\n              disabled: this.isDisabled || this.isLoading,\n            }}\n          >\n            {this.iconStart && (\n              <button\n                type=\"button\"\n                class=\"input-group-text\"\n                id={`${this.innerId}Start`}\n                onClick={this.iconStartClickHandler}\n                disabled={this.isDisabled || this.isLoading}\n              >\n                {this.iconStart && (\n                  <d-icon\n                    class=\"d-input-icon\"\n                    icon={this.iconStart}\n                    familyClass={this.iconStartFamilyClass}\n                    familyPrefix={this.iconStartFamilyPrefix}\n                  />\n                )}\n              </button>\n            )}\n            <select\n              id={this.innerId}\n              name={this.name}\n              class={{ 'form-select': true }}\n              aria-label={this.label}\n              disabled={this.isDisabled || this.isLoading}\n              aria-describedby={`${this.innerId}Add ${this.innerId}Hint`}\n              onChange={this.changeHandler}\n              onBlur={this.blurHandler}\n            >\n              {this.options.map((option) => (\n                <option\n                  value={this.valueExtractor(option)}\n                  selected={\n                    this.selectedOption\n                      && this.valueExtractor(option) === this.valueExtractor(this.selectedOption)\n                  }\n                >\n                  {this.labelExtractor(option)}\n                </option>\n              ))}\n            </select>\n            {(this.iconEnd && !this.isLoading) && (\n              <button\n                type=\"button\"\n                class=\"input-group-text\"\n                id={`${this.innerId}End`}\n                onClick={this.iconEndClickHandler}\n                disabled={this.isDisabled || this.isLoading}\n              >\n                {this.iconEnd && (\n                  <d-icon\n                    class=\"d-input-icon\"\n                    icon={this.iconEnd}\n                    familyClass={this.iconEndFamilyClass}\n                    familyPrefix={this.iconEndFamilyPrefix}\n                  />\n                )}\n              </button>\n            )}\n            {this.isLoading && (\n              <div class=\"input-group-text form-control-icon loading\">\n                <span\n                  class=\"spinner-border spinner-border-sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                >\n                  <span class=\"visually-hidden\">Loading...</span>\n                </span>\n              </div>\n            )}\n          </div>\n          {this.hint && (\n            <div\n              class=\"form-text\"\n              id={`${this.innerId}Hint`}\n            >\n              {this.hint}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}