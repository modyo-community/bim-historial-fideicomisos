{"ast":null,"code":"import { useState, useLayoutEffect } from 'react';\nimport { getContentWidth } from '../helpers/style.js';\nimport { useResizeNotifier } from './useResizeNotifier.js';\nexport function useContentWidth(element) {\n  const [width, setWidth] = useState();\n  function syncWidth() {\n    const newWidth = element ? getContentWidth(element) : undefined;\n    if (width !== newWidth) {\n      setWidth(newWidth);\n    }\n  }\n  useResizeNotifier(element, syncWidth);\n  useLayoutEffect(syncWidth);\n  return width;\n}","map":{"version":3,"names":["useState","useLayoutEffect","getContentWidth","useResizeNotifier","useContentWidth","element","width","setWidth","syncWidth","newWidth","undefined"],"sources":["/Users/felipemeyer/sites/bim/bim-historial-fideicomisos/node_modules/react-responsive-pagination/dist/hooks/useContentWidth.js"],"sourcesContent":["import { useState, useLayoutEffect } from 'react';\nimport { getContentWidth } from '../helpers/style.js';\nimport { useResizeNotifier } from './useResizeNotifier.js';\nexport function useContentWidth(element) {\n    const [width, setWidth] = useState();\n    function syncWidth() {\n        const newWidth = element ? getContentWidth(element) : undefined;\n        if (width !== newWidth) {\n            setWidth(newWidth);\n        }\n    }\n    useResizeNotifier(element, syncWidth);\n    useLayoutEffect(syncWidth);\n    return width;\n}\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,eAAe,QAAQ,OAAO;AACjD,SAASC,eAAe,QAAQ,qBAAqB;AACrD,SAASC,iBAAiB,QAAQ,wBAAwB;AAC1D,OAAO,SAASC,eAAeA,CAACC,OAAO,EAAE;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC;EACpC,SAASQ,SAASA,CAAA,EAAG;IACjB,MAAMC,QAAQ,GAAGJ,OAAO,GAAGH,eAAe,CAACG,OAAO,CAAC,GAAGK,SAAS;IAC/D,IAAIJ,KAAK,KAAKG,QAAQ,EAAE;MACpBF,QAAQ,CAACE,QAAQ,CAAC;IACtB;EACJ;EACAN,iBAAiB,CAACE,OAAO,EAAEG,SAAS,CAAC;EACrCP,eAAe,CAACO,SAAS,CAAC;EAC1B,OAAOF,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}