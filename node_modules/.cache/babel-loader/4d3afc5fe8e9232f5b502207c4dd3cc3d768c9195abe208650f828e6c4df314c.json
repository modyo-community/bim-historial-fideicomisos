{"ast":null,"code":"import { r as registerInstance, c as createEvent, h } from './index-a19c3827.js';\nconst DQuickActionSelect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.eventChange = createEvent(this, \"eventChange\", 7);\n    this.changeHandler = event => {\n      this.eventChange.emit(event.target.value);\n    };\n    this.innerId = undefined;\n    this.name = undefined;\n    this.value = undefined;\n    this.line1 = undefined;\n    this.line2 = undefined;\n    this.isSelected = undefined;\n  }\n  render() {\n    return h(\"label\", {\n      class: \"d-quick-action-select\",\n      htmlFor: this.innerId\n    }, h(\"input\", {\n      id: this.innerId,\n      type: \"radio\",\n      name: this.name,\n      value: this.value,\n      checked: this.isSelected,\n      onChange: this.changeHandler\n    }), h(\"span\", {\n      class: \"d-quick-action-select-line1\"\n    }, this.line1), h(\"span\", {\n      class: \"d-quick-action-select-line2\"\n    }, this.line2));\n  }\n};\nexport { DQuickActionSelect as d_quick_action_select };","map":{"version":3,"names":["DQuickActionSelect","changeHandler","event","eventChange","emit","target","value","render","h","class","htmlFor","innerId","id","type","name","checked","isSelected","onChange","line1","line2"],"sources":["/Users/felipemeyer/sites/bim/bim-historial-fideicomisos/node_modules/@dynamic-framework/ui/dist/esm/src/components/d-quick-action-select/d-quick-action-select.tsx"],"sourcesContent":["import type { ComponentInterface, EventEmitter } from '@stencil/core';\nimport {\n  Component,\n  h,\n  Prop,\n  Event,\n} from '@stencil/core';\n\n@Component({ tag: 'd-quick-action-select' })\nexport class DQuickActionSelect implements ComponentInterface {\n  /**\n   * The id of the input\n   */\n  @Prop() innerId!: string;\n\n  /**\n   * Name of the input\n   */\n  @Prop() name!: string;\n\n  /**\n   * Input value\n   */\n  @Prop() value!: string;\n\n  /**\n   * Line 1 text\n   */\n  @Prop() line1!: string;\n\n  /**\n   * Line 2 text\n   */\n  @Prop() line2!: string;\n\n  /**\n   * Is selected\n   */\n  @Prop() isSelected?: boolean;\n\n  /**\n   * Emitted when the select value has changed\n   */\n  @Event() eventChange!: EventEmitter<string>;\n\n  private changeHandler = (event: Event) => {\n    this.eventChange.emit((event.target as HTMLInputElement).value);\n  };\n\n  render() {\n    return (\n      <label\n        class=\"d-quick-action-select\"\n        htmlFor={this.innerId}\n      >\n        <input\n          id={this.innerId}\n          type=\"radio\"\n          name={this.name}\n          value={this.value}\n          checked={this.isSelected}\n          onChange={this.changeHandler}\n        />\n        <span class=\"d-quick-action-select-line1\">\n          {this.line1}\n        </span>\n        <span class=\"d-quick-action-select-line2\">\n          {this.line2}\n        </span>\n      </label>\n    );\n  }\n}\n"],"mappings":";MASaA,kBAAkB;;;;IAoCrB,KAAAC,aAAa,GAAIC,KAAY;MACnC,IAAI,CAACC,WAAW,CAACC,IAAI,CAAEF,KAAK,CAACG,MAA2B,CAACC,KAAK,CAAC;KAChE;;;;;;;;EAEDC,MAAMA,CAAA;IACJ,OACEC,CAAA;MACEC,KAAK,EAAC,uBAAuB;MAC7BC,OAAO,EAAE,IAAI,CAACC;IAAO,GAErBH,CAAA;MACEI,EAAE,EAAE,IAAI,CAACD,OAAO;MAChBE,IAAI,EAAC,OAAO;MACZC,IAAI,EAAE,IAAI,CAACA,IAAI;MACfR,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBS,OAAO,EAAE,IAAI,CAACC,UAAU;MACxBC,QAAQ,EAAE,IAAI,CAAChB;IAAa,EAC5B,EACFO,CAAA;MAAMC,KAAK,EAAC;IAA6B,GACtC,IAAI,CAACS,KAAK,CACN,EACPV,CAAA;MAAMC,KAAK,EAAC;IAA6B,GACtC,IAAI,CAACU,KAAK,CACN,CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}