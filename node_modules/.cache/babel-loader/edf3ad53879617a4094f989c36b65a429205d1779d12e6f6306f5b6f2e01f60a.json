{"ast":null,"code":"import { proxyCustomElement, HTMLElement, createEvent, h } from '@stencil/core/internal/client';\nimport { P as PREFIX_BS } from './component-config.js';\nimport { d as defineCustomElement$2 } from './d-icon2.js';\nconst ALERT_TYPE_ICON = {\n  warning: 'exclamation-circle',\n  danger: 'exclamation-triangle',\n  success: 'check-circle',\n  info: 'info-circle',\n  light: 'info-circle',\n  dark: 'info-circle'\n};\nconst DAlert$1 = /*@__PURE__*/proxyCustomElement(class DAlert extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.eventClose = createEvent(this, \"eventClose\", 7);\n    this.clickHandler = () => {\n      this.eventClose.emit();\n    };\n    this.type = 'light';\n    this.icon = undefined;\n    this.iconFamilyClass = undefined;\n    this.iconFamilyPrefix = undefined;\n    this.showIcon = false;\n    this.showClose = undefined;\n  }\n  generateClasses() {\n    return {\n      [`alert alert-${this.type}`]: true,\n      'fade show': !!this.showClose\n    };\n  }\n  getIcon() {\n    return this.icon || ALERT_TYPE_ICON[this.type] || '';\n  }\n  generateStyleVariables() {\n    return Object.assign(Object.assign({}, this.type === 'light' ? {\n      [`--${PREFIX_BS}alert-component-icon-color`]: `var(--${PREFIX_BS}secondary)`\n    } : {}), {\n      [`--${PREFIX_BS}alert-component-separator-opacity`]: '0.3'\n    });\n  }\n  render() {\n    return h(\"div\", {\n      class: this.generateClasses(),\n      style: this.generateStyleVariables(),\n      role: \"alert\"\n    }, (this.showIcon || this.icon) && h(\"d-icon\", {\n      class: \"alert-icon\",\n      icon: this.getIcon(),\n      familyClass: this.iconFamilyClass,\n      familyPrefix: this.iconFamilyPrefix\n    }), h(\"div\", {\n      class: \"alert-text\"\n    }, h(\"slot\", null)), this.showClose && h(\"div\", {\n      class: \"alert-separator\"\n    }), this.showClose && h(\"button\", {\n      type: \"button\",\n      class: \"btn-close\",\n      \"aria-label\": \"Close\",\n      onClick: this.clickHandler\n    }, h(\"d-icon\", {\n      class: \"alert-close-icon\",\n      icon: \"x-lg\",\n      familyClass: this.iconFamilyClass,\n      familyPrefix: this.iconFamilyPrefix\n    })));\n  }\n}, [4, \"d-alert\", {\n  \"type\": [1],\n  \"icon\": [1],\n  \"iconFamilyClass\": [1, \"icon-family-class\"],\n  \"iconFamilyPrefix\": [1, \"icon-family-prefix\"],\n  \"showIcon\": [4, \"show-icon\"],\n  \"showClose\": [4, \"show-close\"]\n}]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"d-alert\", \"d-icon\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"d-alert\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, DAlert$1);\n        }\n        break;\n      case \"d-icon\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nconst DAlert = DAlert$1;\nconst defineCustomElement = defineCustomElement$1;\nexport { DAlert, defineCustomElement };","map":{"version":3,"names":["ALERT_TYPE_ICON","warning","danger","success","info","light","dark","DAlert$1","proxyCustomElement","DAlert","HTMLElement","clickHandler","eventClose","emit","generateClasses","type","showClose","getIcon","icon","generateStyleVariables","Object","assign","PREFIX_BS","render","h","class","style","role","showIcon","familyClass","iconFamilyClass","familyPrefix","iconFamilyPrefix","onClick"],"sources":["/Users/felipemeyer/sites/bim/bim-historial-fideicomisos/node_modules/@dynamic-framework/ui/components/src/components/d-alert/d-alert-interface.tsx","/Users/felipemeyer/sites/bim/bim-historial-fideicomisos/node_modules/@dynamic-framework/ui/components/src/components/d-alert/d-alert.tsx"],"sourcesContent":["export type AlertType = 'success' | 'info' | 'light' | 'dark' | 'warning' | 'danger';\nexport type AlertTypeIconMap = {\n  [state in AlertType]: string;\n};\n\nexport const ALERT_TYPE_ICON: AlertTypeIconMap = {\n  warning: 'exclamation-circle',\n  danger: 'exclamation-triangle',\n  success: 'check-circle',\n  info: 'info-circle',\n  light: 'info-circle',\n  dark: 'info-circle',\n};\n","import {\n  Component,\n  Prop,\n  h,\n  EventEmitter,\n  Event,\n} from '@stencil/core';\n\nimport { PREFIX_BS } from '../../utils';\nimport type { ClassMap } from '../../utils/component-interface';\n\nimport { ALERT_TYPE_ICON } from './d-alert-interface';\nimport type { AlertType } from './d-alert-interface';\n\n@Component({ tag: 'd-alert' })\nexport class DAlert {\n  /**\n   * Alert type\n   */\n  @Prop() type: AlertType = 'light';\n\n  /**\n   * Alert icon\n   */\n  @Prop() icon?: string;\n\n  /**\n   * Right icon family class\n   */\n  @Prop() iconFamilyClass?: string;\n\n  /**\n   * Right icon family class\n   */\n  @Prop() iconFamilyPrefix?: string;\n\n  /**\n   * Show alert icon\n   */\n  @Prop() showIcon = false;\n\n  /**\n   * Show close button\n   */\n  @Prop() showClose?: boolean;\n\n  /**\n   * Emitted when the button has been clicked.\n   */\n  @Event() eventClose!: EventEmitter;\n\n  private clickHandler = () => {\n    this.eventClose.emit();\n  };\n\n  private generateClasses(): ClassMap {\n    return {\n      [`alert alert-${this.type}`]: true,\n      'fade show': !!this.showClose,\n    };\n  }\n\n  private getIcon(): string {\n    return this.icon || ALERT_TYPE_ICON[this.type] || '';\n  }\n\n  private generateStyleVariables() {\n    return {\n      ...this.type === 'light' ? { [`--${PREFIX_BS}alert-component-icon-color`]: `var(--${PREFIX_BS}secondary)` } : {},\n      [`--${PREFIX_BS}alert-component-separator-opacity`]: '0.3',\n    };\n  }\n\n  render() {\n    return (\n      <div\n        class={this.generateClasses()}\n        style={this.generateStyleVariables()}\n        role=\"alert\"\n      >\n        {(this.showIcon || this.icon) && (\n          <d-icon\n            class=\"alert-icon\"\n            icon={this.getIcon()}\n            familyClass={this.iconFamilyClass}\n            familyPrefix={this.iconFamilyPrefix}\n          />\n        )}\n        <div class=\"alert-text\">\n          <slot />\n        </div>\n        {this.showClose && (\n          <div class=\"alert-separator\" />\n        )}\n        {this.showClose && (\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            aria-label=\"Close\"\n            onClick={this.clickHandler}\n          >\n            <d-icon\n              class=\"alert-close-icon\"\n              icon=\"x-lg\"\n              familyClass={this.iconFamilyClass}\n              familyPrefix={this.iconFamilyPrefix}\n            />\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n"],"mappings":";;;AAKO,MAAMA,eAAe,GAAqB;EAC/CC,OAAO,EAAE,oBAAoB;EAC7BC,MAAM,EAAE,sBAAsB;EAC9BC,OAAO,EAAE,cAAc;EACvBC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,aAAa;EACpBC,IAAI,EAAE;CACP;MCGYC,QAAM,gBAAAC,kBAAA,OAAAC,MAAA,SAAAC,WAAA;;;;;IAoCT,KAAAC,YAAY,GAAG;MACrB,IAAI,CAACC,UAAU,CAACC,IAAI,EAAE;KACvB;gBAlCyB,OAAO;;;;oBAoBd,KAAK;;;EAgBhBC,eAAeA,CAAA;IACrB,OAAO;MACL,CAAC,eAAe,IAAI,CAACC,IAAI,EAAE,GAAG,IAAI;MAClC,WAAW,EAAE,CAAC,CAAC,IAAI,CAACC;KACrB;;EAGKC,OAAOA,CAAA;IACb,OAAO,IAAI,CAACC,IAAI,IAAIlB,eAAe,CAAC,IAAI,CAACe,IAAI,CAAC,IAAI,EAAE;;EAG9CI,sBAAsBA,CAAA;IAC5B,OAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACK,IAAI,CAACN,IAAI,KAAK,OAAO,GAAG;MAAE,CAAC,KAAKO,SAAS,4BAA4B,GAAG,SAASA,SAAS;IAAY,CAAE,GAAG,EAAE;MAChH,CAAC,KAAKA,SAAS,mCAAmC,GAAG;IAAK;;EAI9DC,MAAMA,CAAA;IACJ,OACEC,CAAA;MACEC,KAAK,EAAE,IAAI,CAACX,eAAe,EAAE;MAC7BY,KAAK,EAAE,IAAI,CAACP,sBAAsB,EAAE;MACpCQ,IAAI,EAAC;IAAO,GAEX,CAAC,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACV,IAAI,KAC1BM,CAAA;MACEC,KAAK,EAAC,YAAY;MAClBP,IAAI,EAAE,IAAI,CAACD,OAAO,EAAE;MACpBY,WAAW,EAAE,IAAI,CAACC,eAAe;MACjCC,YAAY,EAAE,IAAI,CAACC;IAAgB,EAEtC,EACDR,CAAA;MAAKC,KAAK,EAAC;IAAY,GACrBD,CAAA,cAAQ,CACJ,EACL,IAAI,CAACR,SAAS,IACbQ,CAAA;MAAKC,KAAK,EAAC;IAAiB,EAC7B,EACA,IAAI,CAACT,SAAS,IACbQ,CAAA;MACET,IAAI,EAAC,QAAQ;MACbU,KAAK,EAAC,WAAW;MAAA,cACN,OAAO;MAClBQ,OAAO,EAAE,IAAI,CAACtB;IAAY,GAE1Ba,CAAA;MACEC,KAAK,EAAC,kBAAkB;MACxBP,IAAI,EAAC,MAAM;MACXW,WAAW,EAAE,IAAI,CAACC,eAAe;MACjCC,YAAY,EAAE,IAAI,CAACC;IAAgB,EACnC,CAEL,CACG"},"metadata":{},"sourceType":"module","externalDependencies":[]}