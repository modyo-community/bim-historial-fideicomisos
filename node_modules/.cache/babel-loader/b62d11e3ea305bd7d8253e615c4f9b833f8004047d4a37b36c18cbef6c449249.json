{"ast":null,"code":"import { r as registerInstance, c as createEvent, h } from './index-a19c3827.js';\nimport './store-fc6c92fd.js';\nimport { P as PREFIX_BS } from './component-config-025f7932.js';\nconst DInputPin = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.eventChange = createEvent(this, \"eventChange\", 7);\n    // eslint-disable-next-line class-methods-use-this\n    this.nextInput = e => {\n      var _a;\n      const input = e.target;\n      const regex = new RegExp(this.pattern);\n      if (!regex.test(input.value)) {\n        input.value = '';\n      }\n      if (input.value !== '') {\n        if (input.nextSibling) {\n          (_a = input.nextSibling) === null || _a === void 0 ? void 0 : _a.focus();\n        } else {\n          input.blur();\n        }\n      }\n    };\n    // eslint-disable-next-line class-methods-use-this\n    this.prevInput = e => {\n      var _a;\n      if (e.key === 'Backspace') {\n        const {\n          value\n        } = e.currentTarget;\n        const input = e.target;\n        if (input.previousSibling && value === '') {\n          (_a = input.previousSibling) === null || _a === void 0 ? void 0 : _a.focus();\n        } else {\n          input.blur();\n          input.focus();\n        }\n      }\n    };\n    // eslint-disable-next-line class-methods-use-this\n    this.focusInput = e => {\n      const input = e.target;\n      input.value = '';\n      this.eventChange.emit('');\n    };\n    // eslint-disable-next-line class-methods-use-this\n    this.wheelInput = e => {\n      const input = e.target;\n      // prevent change the value with the scroll\n      input.blur();\n    };\n    this.formChange = e => {\n      const form = e.currentTarget;\n      const formData = new FormData(form);\n      const values = Array.from(formData.values()).join('');\n      this.eventChange.emit(values);\n    };\n    // eslint-disable-next-line class-methods-use-this\n    this.preventDefaultEvents = e => {\n      e.preventDefault();\n    };\n    this.innerId = undefined;\n    this.label = '';\n    this.labelIcon = undefined;\n    this.labelIconFamilyClass = undefined;\n    this.labelIconFamilyPrefix = undefined;\n    this.placeholder = '•';\n    this.type = 'text';\n    this.isDisabled = false;\n    this.isReadOnly = false;\n    this.isLoading = false;\n    this.isSecret = false;\n    this.iconFamilyClass = undefined;\n    this.iconFamilyPrefix = undefined;\n    this.characters = 4;\n    this.innerInputMode = 'text';\n    this.hint = undefined;\n    this.isInvalid = false;\n    this.isValid = false;\n    this.pattern = undefined;\n  }\n  watchMTypeHandler(newValue) {\n    this.pattern = newValue === 'number' ? '[0-9]+' : '^[a-zA-Z0-9]+$';\n  }\n  connectedCallback() {\n    this.pattern = this.type === 'number' ? '[0-9]+' : '^[a-zA-Z0-9]+$';\n  }\n  render() {\n    return h(\"div\", {\n      class: \"d-input-pin\"\n    }, this.label && h(\"label\", {\n      htmlFor: \"pinIndex0\"\n    }, this.label, this.labelIcon && h(\"d-icon\", {\n      class: \"d-input-pin-icon\",\n      icon: this.labelIcon,\n      size: `var(--${PREFIX_BS}input-label-font-size)`,\n      familyClass: this.labelIconFamilyClass,\n      familyPrefix: this.labelIconFamilyPrefix\n    })), h(\"form\", {\n      id: this.innerId,\n      class: \"d-input-pin-controls\",\n      onInput: this.formChange,\n      onSubmit: this.preventDefaultEvents\n    }, Array.from({\n      length: this.characters\n    }).map((_, index) => h(\"input\", Object.assign({\n      class: {\n        'form-control': true,\n        'is-invalid': this.isInvalid,\n        'is-valid': this.isValid\n      },\n      type: this.isSecret ? 'password' : this.type,\n      \"aria-describedby\": `${this.innerId}State`,\n      inputMode: this.innerInputMode,\n      id: `pinIndex${index}`,\n      name: `pin-${index}`,\n      maxLength: 1,\n      onInput: this.nextInput,\n      onKeyDown: this.prevInput,\n      onFocus: this.focusInput,\n      onWheel: this.wheelInput,\n      onClick: this.preventDefaultEvents,\n      autocomplete: \"off\",\n      placeholder: this.placeholder,\n      disabled: this.isDisabled || this.isLoading,\n      required: true\n    }, this.type === 'number' && {\n      min: 0,\n      max: 9\n    }))), (this.isInvalid || this.isValid) && !this.isLoading && h(\"span\", {\n      class: \"input-group-text\",\n      id: `${this.innerId}State`\n    }, h(\"d-icon\", {\n      class: \"d-input-pin-validation-icon\",\n      icon: this.isInvalid ? 'exclamation-circle' : 'check',\n      familyClass: this.iconFamilyClass,\n      familyPrefix: this.iconFamilyPrefix\n    })), this.isLoading && h(\"div\", {\n      class: \"input-group-text d-input-pin-icon\"\n    }, h(\"span\", {\n      class: \"spinner-border spinner-border-sm\",\n      role: \"status\",\n      \"aria-hidden\": \"true\"\n    }, h(\"span\", {\n      class: \"visually-hidden\"\n    }, \"Loading...\")))), this.hint && h(\"div\", {\n      class: \"form-text\",\n      id: `${this.innerId}Hint`\n    }, this.hint));\n  }\n  static get watchers() {\n    return {\n      \"type\": [\"watchMTypeHandler\"]\n    };\n  }\n};\nexport { DInputPin as d_input_pin };","map":{"version":3,"names":["DInputPin","nextInput","e","input","target","regex","RegExp","pattern","test","value","nextSibling","_a","focus","blur","prevInput","key","currentTarget","previousSibling","focusInput","eventChange","emit","wheelInput","formChange","form","formData","FormData","values","Array","from","join","preventDefaultEvents","preventDefault","watchMTypeHandler","newValue","connectedCallback","type","render","h","class","label","htmlFor","labelIcon","icon","size","PREFIX_BS","familyClass","labelIconFamilyClass","familyPrefix","labelIconFamilyPrefix","id","innerId","onInput","onSubmit","length","characters","map","_","index","Object","assign","isInvalid","isValid","isSecret","inputMode","innerInputMode","name","maxLength","onKeyDown","onFocus","onWheel","onClick","autocomplete","placeholder","disabled","isDisabled","isLoading","required","min","max","iconFamilyClass","iconFamilyPrefix","role","hint"],"sources":["/Users/felipemeyer/sites/bim/bim-historial-fideicomisos/node_modules/@dynamic-framework/ui/dist/esm/src/components/d-input-pin/d-input-pin.tsx"],"sourcesContent":["import {\n  Component,\n  h,\n  Prop,\n  Event,\n  State,\n  Watch,\n} from '@stencil/core';\nimport type { ComponentInterface, EventEmitter } from '@stencil/core';\n\nimport { PREFIX_BS } from '../../utils';\n\nimport { PinInputMode, PinInputType } from './d-input-pin-interface';\n\n@Component({ tag: 'd-input-pin' })\nexport class DInputPin implements ComponentInterface {\n  /**\n   * Id for the input\n   * */\n  @Prop() innerId!: string;\n\n  /**\n   * The label text\n   */\n  @Prop() label = '';\n\n  /**\n   * Icon for the label text\n   */\n  @Prop() labelIcon?: string;\n\n  /**\n   * Icon label family class\n   */\n  @Prop() labelIconFamilyClass?: string;\n\n  /**\n   * Icon label family prefix\n   */\n  @Prop() labelIconFamilyPrefix?: string;\n\n  /**\n   * Placeholder of the inputs\n   */\n  @Prop() placeholder?: string = '•';\n\n  /**\n   * Type of the inputs\n   */\n  @Prop() type: PinInputType = 'text';\n\n  /**\n   * Flag to disable the input\n   */\n  @Prop() isDisabled = false;\n\n  /**\n   * Flag to read only the input\n   */\n  @Prop() isReadOnly = false;\n\n  /**\n   * Flag for loading state.\n   */\n  @Prop() isLoading = false;\n\n  /**\n   * Hide the characters\n   */\n  @Prop() isSecret = false;\n\n  /**\n   * Right icon family class\n   */\n  @Prop() iconFamilyClass?: string;\n\n  /**\n   * Right icon family class\n   */\n  @Prop() iconFamilyPrefix?: string;\n\n  /**\n   * Number of characters of the pin\n   */\n  @Prop() characters = 4;\n\n  /**\n   * Keyboard style\n   */\n  @Prop() innerInputMode: PinInputMode = 'text';\n\n  /**\n   * Hint for the input\n   * */\n  @Prop() hint?: string;\n\n  /**\n   * Add is-invalid class\n   */\n  @Prop() isInvalid = false;\n\n  /**\n   * Add is-valid class\n   */\n  @Prop() isValid = false;\n\n  /**\n   * Emitted when the inputs had changed\n   */\n  @Event() eventChange!: EventEmitter<string>;\n\n  @State() pattern!: string;\n\n  @Watch('type')\n  watchMTypeHandler(newValue: string) {\n    this.pattern = newValue === 'number' ? '[0-9]+' : '^[a-zA-Z0-9]+$';\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private nextInput = (e: Event) => {\n    const input = e.target as HTMLInputElement;\n    const regex = new RegExp(this.pattern);\n\n    if (!regex.test(input.value)) {\n      input.value = '';\n    }\n\n    if (input.value !== '') {\n      if (input.nextSibling) {\n        (input.nextSibling as HTMLElement)?.focus();\n      } else {\n        input.blur();\n      }\n    }\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  private prevInput = (e: KeyboardEvent) => {\n    if (e.key === 'Backspace') {\n      const { value } = e.currentTarget as HTMLInputElement;\n      const input = e.target as HTMLInputElement;\n\n      if (input.previousSibling && value === '') {\n        (input.previousSibling as HTMLElement)?.focus();\n      } else {\n        input.blur();\n        input.focus();\n      }\n    }\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  private focusInput = (e: Event) => {\n    const input = e.target as HTMLInputElement;\n    input.value = '';\n    this.eventChange.emit('');\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  private wheelInput = (e: Event) => {\n    const input = e.target as HTMLInputElement;\n    // prevent change the value with the scroll\n    input.blur();\n  };\n\n  private formChange = (e: Event) => {\n    const form = e.currentTarget as HTMLFormElement;\n    const formData = new FormData(form);\n    const values = Array.from(formData.values()).join('');\n    this.eventChange.emit(values);\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  private preventDefaultEvents = (e: Event) => {\n    e.preventDefault();\n  };\n\n  connectedCallback() {\n    this.pattern = this.type === 'number' ? '[0-9]+' : '^[a-zA-Z0-9]+$';\n  }\n\n  render() {\n    return (\n      <div class=\"d-input-pin\">\n        {this.label && (\n          <label htmlFor=\"pinIndex0\">\n            {this.label}\n            {this.labelIcon && (\n              <d-icon\n                class=\"d-input-pin-icon\"\n                icon={this.labelIcon}\n                size={`var(--${PREFIX_BS}input-label-font-size)`}\n                familyClass={this.labelIconFamilyClass}\n                familyPrefix={this.labelIconFamilyPrefix}\n              />\n            )}\n          </label>\n        )}\n        <form\n          id={this.innerId}\n          class=\"d-input-pin-controls\"\n          onInput={this.formChange}\n          onSubmit={this.preventDefaultEvents}\n        >\n          {Array.from({ length: this.characters }).map((_, index) => (\n            <input\n              class={{\n                'form-control': true,\n                'is-invalid': this.isInvalid,\n                'is-valid': this.isValid,\n              }}\n              type={this.isSecret ? 'password' : this.type}\n              aria-describedby={`${this.innerId}State`}\n              inputMode={this.innerInputMode}\n              id={`pinIndex${index}`}\n              name={`pin-${index}`}\n              maxLength={1}\n              onInput={this.nextInput}\n              onKeyDown={this.prevInput}\n              onFocus={this.focusInput}\n              onWheel={this.wheelInput}\n              onClick={this.preventDefaultEvents}\n              autocomplete=\"off\"\n              placeholder={this.placeholder}\n              disabled={this.isDisabled || this.isLoading}\n              required\n              {...this.type === 'number' && (\n                {\n                  min: 0,\n                  max: 9,\n                }\n              )}\n            />\n          ))}\n          {((this.isInvalid || this.isValid) && !this.isLoading) && (\n            <span\n              class=\"input-group-text\"\n              id={`${this.innerId}State`}\n            >\n              <d-icon\n                class=\"d-input-pin-validation-icon\"\n                icon={this.isInvalid ? 'exclamation-circle' : 'check'}\n                familyClass={this.iconFamilyClass}\n                familyPrefix={this.iconFamilyPrefix}\n              />\n            </span>\n          )}\n          {this.isLoading && (\n            <div class=\"input-group-text d-input-pin-icon\">\n              <span\n                class=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              >\n                <span class=\"visually-hidden\">Loading...</span>\n              </span>\n            </div>\n          )}\n        </form>\n        {this.hint && (\n          <div\n            class=\"form-text\"\n            id={`${this.innerId}Hint`}\n          >\n            {this.hint}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}